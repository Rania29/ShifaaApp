/**
 * This file was generated by the Jeddict
 */
package entity.domain;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;

/**
 * @author sawad
 */
@Entity
public class Clinic {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Basic
    private String name;

    @OneToMany(mappedBy = "clinic")
    private List<Doctor> doctors;

    @ManyToMany
    private List<ClinicService> clinicServices;

    @ManyToMany(mappedBy = "clinics")
    private List<Hospital> hospitals;

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public List<Doctor> getDoctors() {
        if (doctors == null) {
            doctors = new ArrayList<>();
        }
        return this.doctors;
    }

    public void setDoctors(List<Doctor> doctors) {
        this.doctors = doctors;
    }

    public void addDoctor(Doctor doctor) {
        getDoctors().add(doctor);
        doctor.setClinic(this);
    }

    public void removeDoctor(Doctor doctor) {
        getDoctors().remove(doctor);
        doctor.setClinic(null);
    }

    public List<ClinicService> getClinicServices() {
        if (clinicServices == null) {
            clinicServices = new ArrayList<>();
        }
        return this.clinicServices;
    }

    public void setClinicServices(List<ClinicService> clinicServices) {
        this.clinicServices = clinicServices;
    }

    public void addClinicService(ClinicService clinicService) {
        getClinicServices().add(clinicService);
        clinicService.getClinics().add(this);
    }

    public void removeClinicService(ClinicService clinicService) {
        getClinicServices().remove(clinicService);
        clinicService.getClinics().remove(this);
    }

    public List<Hospital> getHospitals() {
        if (hospitals == null) {
            hospitals = new ArrayList<>();
        }
        return this.hospitals;
    }

    public void setHospitals(List<Hospital> hospitals) {
        this.hospitals = hospitals;
    }

    public void addHospital(Hospital hospital) {
        getHospitals().add(hospital);
    }

    public void removeHospital(Hospital hospital) {
        getHospitals().remove(hospital);
    }

}