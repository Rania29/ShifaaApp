/**
 * This file was generated by the Jeddict
 */
package entity.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

/**
 * @author sawad
 */
@Entity
public class Clinic implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Basic
    private String image;

    @Basic
    private String workingDaysHours;

    @ManyToOne
    private Hospital hospital;

    @ManyToOne
    private ClinicList name;

    @OneToMany(mappedBy = "clinic")
    private List<Doctor> doctors;

    @OneToMany(mappedBy = "clinic")
    private List<ClinicService> clinicServices;

    public Clinic() {
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getImage() {
        return this.image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getWorkingDaysHours() {
        return this.workingDaysHours;
    }

    public void setWorkingDaysHours(String workingDaysHours) {
        this.workingDaysHours = workingDaysHours;
    }

    public Hospital getHospital() {
        return this.hospital;
    }

    public void setHospital(Hospital hospital) {
        this.hospital = hospital;
    }

    public ClinicList getName() {
        return this.name;
    }

    public void setName(ClinicList name) {
        this.name = name;
    }

    public List<Doctor> getDoctors() {
        if (doctors == null) {
            doctors = new ArrayList<>();
        }
        return this.doctors;
    }

    public void setDoctors(List<Doctor> doctors) {
        this.doctors = doctors;
    }

    public void addDoctor(Doctor doctor) {
        getDoctors().add(doctor);
        doctor.setClinic(this);
    }

    public void removeDoctor(Doctor doctor) {
        getDoctors().remove(doctor);
        doctor.setClinic(null);
    }

    public List<ClinicService> getClinicServices() {
        if (clinicServices == null) {
            clinicServices = new ArrayList<>();
        }
        return this.clinicServices;
    }

    public void setClinicServices(List<ClinicService> clinicServices) {
        this.clinicServices = clinicServices;
    }

    public void addClinicService(ClinicService clinicService) {
        getClinicServices().add(clinicService);
        clinicService.setClinic(this);
    }

    public void removeClinicService(ClinicService clinicService) {
        getClinicServices().remove(clinicService);
        clinicService.setClinic(null);
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 97 * hash + Objects.hashCode(this.id);
        hash = 97 * hash + Objects.hashCode(this.image);
        hash = 97 * hash + Objects.hashCode(this.workingDaysHours);
        hash = 97 * hash + Objects.hashCode(this.hospital);
        hash = 97 * hash + Objects.hashCode(this.name);
        hash = 97 * hash + Objects.hashCode(this.doctors);
        hash = 97 * hash + Objects.hashCode(this.clinicServices);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Clinic other = (Clinic) obj;
        if (!Objects.equals(this.image, other.image)) {
            return false;
        }
        if (!Objects.equals(this.workingDaysHours, other.workingDaysHours)) {
            return false;
        }
        if (!Objects.equals(this.id, other.id)) {
            return false;
        }
        if (!Objects.equals(this.hospital, other.hospital)) {
            return false;
        }
        if (!Objects.equals(this.name, other.name)) {
            return false;
        }
        if (!Objects.equals(this.doctors, other.doctors)) {
            return false;
        }
        if (!Objects.equals(this.clinicServices, other.clinicServices)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return hospital + " " + name;
    }

}